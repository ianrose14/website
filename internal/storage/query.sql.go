// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: query.sql

package storage

import (
	"context"
	"time"
)

const fetchStravaTokens = `-- name: FetchStravaTokens :one
SELECT access_token, refresh_token, created_time, expires_at
    FROM strava_tokens
    WHERE username=?
`

type FetchStravaTokensRow struct {
	AccessToken  string
	RefreshToken string
	CreatedTime  time.Time
	ExpiresAt    time.Time
}

func (q *Queries) FetchStravaTokens(ctx context.Context, username string) (FetchStravaTokensRow, error) {
	row := q.db.QueryRowContext(ctx, fetchStravaTokens, username)
	var i FetchStravaTokensRow
	err := row.Scan(
		&i.AccessToken,
		&i.RefreshToken,
		&i.CreatedTime,
		&i.ExpiresAt,
	)
	return i, err
}

const insertStravaTokens = `-- name: InsertStravaTokens :exec
INSERT OR REPLACE INTO strava_tokens(username, access_token, refresh_token, created_time, expires_at) VALUES (?,?,?,?,?)
`

type InsertStravaTokensParams struct {
	Username     string
	AccessToken  string
	RefreshToken string
	CreatedTime  time.Time
	ExpiresAt    time.Time
}

func (q *Queries) InsertStravaTokens(ctx context.Context, arg InsertStravaTokensParams) error {
	_, err := q.db.ExecContext(ctx, insertStravaTokens,
		arg.Username,
		arg.AccessToken,
		arg.RefreshToken,
		arg.CreatedTime,
		arg.ExpiresAt,
	)
	return err
}
